#!/bin/bash

set -euo pipefail

# shellcheck source=base.sh
source "$(d script-base)"

PLAYER=$(d config get music.player spotify)

_pctl() {
    d require playerctl
    playerctl metadata -s --player "$PLAYER" --format $'{{status}}\t{{artist}}\t{{title}}' "$@"
}

report-off() {
    echo '󰝚 '
}

report-status() {
    local STATUS=${1:?Status required}
    local ARTIST=${2:?Artist required}
    local TITLE=${3:?Title required}
    if [ "$STATUS" == "Stopped" ]; then
        echo " "
    elif [ "$STATUS" == "Playing" ]; then
        echo "  $ARTIST - $TITLE"
    elif [ "$STATUS" == "Paused" ]; then
        echo "  $ARTIST - $TITLE"
    else
        echo "󰝚 "
    fi
}

report-text() {
    local INFO=$1
    if [ -z "$INFO" ]; then
        report-off
    else
        IFS=$'\t' read -r STATUS ARTIST TITLE <<<"$INFO"
        report-status "$STATUS" "$ARTIST" "$TITLE"
    fi
}

report-json() {
    d require jq

    local INFO=$1
    local TEXT CLASS
    if [ -z "$INFO" ]; then
        TEXT=$(report-off)
        CLASS=off
    else
        IFS=$'\t' read -r STATUS ARTIST TITLE <<<"$INFO"
        TEXT=$(report-status "$STATUS" "$ARTIST" "$TITLE")
        if [[ "$STATUS" =~ (Stopped|Playing|Paused) ]]; then
            CLASS=${STATUS,,}
        else
            CLASS=unknown
        fi
    fi

    jq -ncM '{ text: $text, class: $class }' --arg text "$TEXT" --arg class "$CLASS"
}

d-widget-music-poll() {
    report-text "$(_pctl)"
}

d-widget-music-poll-json() {
    report-json "$(_pctl)"
}

d-widget-music-run() {
    report-text ""
    _pctl --follow | while IFS=$'\n' read -r LINE; do
        report-text "$LINE"
    done
}

d-widget-music-run-json() {
    report-json ""
    _pctl --follow | while IFS=$'\n' read -r LINE; do
        report-json "$LINE"
    done
}

d-widget-music-left-click() {
    if pidof 'spotify'; then
        sp play
    else
        d launch music
    fi
}

d-widget-music-middle-click() {
    sp quit
}

d-widget-music-right-click() {
    sp next
}

forward-cmd d-widget-music- "$@"
