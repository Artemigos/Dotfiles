#!/bin/bash

set -euo pipefail

# shellcheck source=base.sh
source "$(d script-base)"

d-menu-from-json() {
    d require jq

    DATA=$(cat "${1:-/dev/stdin}")

    PROMPT=$(echo "$DATA" | jq -r '.prompt')
    SELECTED=$(echo "$DATA" | jq -r '.commands[].description' | d-menu-dmenu "$PROMPT")
    CMD=$(echo "$DATA" | jq -r ".commands | map(select(.description == \"$SELECTED\")) | .[0].command")
    eval "$CMD"
}

d-menu-tool() {
    if [ "$XDG_SESSION_TYPE" == "x11" ]; then
        echo rofi
    elif [ "$XDG_SESSION_TYPE" == "wayland" ]; then
        if d tools layer-shell-supported; then
            echo fuzzel
        else
            echo wofi
        fi
    else
        d error "Unknown session type" "$XDG_SESSION_TYPE"
        return 1
    fi
}

d-menu-dmenu() {
    local SELECTOR
    SELECTOR=$(d menu tool)
    d require "$SELECTOR"

    local PROMPT_ARGS=()
    if [ -n "${1:-}" ]; then
        PROMPT_ARGS+=("-p" "$1")
    fi

    if [ "$SELECTOR" == "rofi" ]; then
        rofi -dmenu -i "${PROMPT_ARGS[@]}"
    elif [ "$SELECTOR" == "fuzzel" ]; then
        if [ ${#PROMPT_ARGS[@]} -gt 0 ]; then
            PROMPT_ARGS[1]="${PROMPT_ARGS[1]}: "
        fi
        fuzzel --dmenu "${PROMPT_ARGS[@]}"
    else
        wofi -d -i "${PROMPT_ARGS[@]}" 2>/dev/null
    fi
}

d-menu-command() {
    local SELECTOR
    SELECTOR=$(d menu tool)
    d require "$SELECTOR"

    if [ "$SELECTOR" == "rofi" ]; then
        rofi -modi run -show run
    elif [ "$SELECTOR" == "fuzzel" ]; then
        fuzzel --list-executables-in-path
    else
        wofi --show run 2>/dev/null
    fi
}

d-menu-app() {
    local SELECTOR
    SELECTOR=$(d menu tool)
    d require "$SELECTOR"

    if [ "$SELECTOR" == "rofi" ]; then
        rofi -modi drun -show drun -show-icons
    elif [ "$SELECTOR" == "fuzzel" ]; then
        fuzzel
    else
        wofi --show drun -I 2>/dev/null
    fi
}

d-menu-window() {
    # TODO: wofi doesn't support selecting windows, maybe hack something for myself
    d require rofi
    rofi -modi window -show window
}

d-menu-message() {
    local MSG=${1:?Message required}

    if d has-cmd rofi; then
        rofi -e "$MSG"
    elif d has-cmd zenity; then
        zenity --info --text "$MSG"
    else
        # fallback to a terminal window
        d tools terminal-popup-msg "$MSG"
    fi
}

forward-cmd d-menu- "$@"
