#!/bin/bash

set -euo pipefail

main () {
    case ${1:-} in
        x-convert-tz) x-convert-tz ;;
        x-gen-tz-summary-show) x-gen-tz-summary-show ;;
        x-gen-tz-summary-copy) x-gen-tz-summary-copy ;;
        list-x-options) listXOptions ;;
        show) listXOptions | d menu from-json ;;
        *) exit 1 ;;
    esac
}

get-config-tzs() {
    d config get tz.main
    d config get-arr tz.additional
}

convert-tz() {
    d require date
    local TZ_FROM=${1:?Source timezone required}
    local TZ_TO=${2:?Target timezone required}
    local TIME=${3:?Time required}
    local RESULT TARGET_TIME CLOCK
    TARGET_TIME=$(TZ="$TZ_TO" date -d "TZ=\"$TZ_FROM\" $TIME" +"%R")
    CLOCK=$(clock-face-for-time "$TARGET_TIME")
    RESULT=$(TZ="$TZ_TO" date -d "TZ=\"$TZ_FROM\" $TIME" +" $CLOCK%R %Z")
    echo "$RESULT"
}

gen-tz-summary() {
    local TZ_FROM=${1:?Source timezone required}
    local TIME=${2:?Time required}
    while read -r line; do
        convert-tz "$TZ_FROM" "$line" "$TIME"
    done < <(get-config-tzs)
}

x-convert-tz() {
    local TZ_FROM
    local TZ_TO
    local TIME
    local RESULT

    TZ_FROM=$(x-select-tz)
    TIME=$(x-time-input)
    TZ_TO=$(x-select-tz)
    RESULT=$(convert-tz "$TZ_FROM" "$TZ_TO" "$TIME")
    d menu message "$RESULT"
}

x-select-tz() {
    d menu dmenu "Timezone" < <(get-config-tzs)
}

gen-times() {
    for hour in $(seq 0 23); do
        for minute in $(seq 0 15 45); do
            printf "%.2d:%.2d\n" "$hour" "$minute"
        done
    done
}

clock-face-for-time() {
    local TIME=${1:?Time required}
    local HOUR
    local MINUTE
    HOUR=$(( $(cut -d: -f1 <<<"$TIME") % 12 ))
    MINUTE=$(( $(cut -d: -f2 <<<"$TIME") / 30 ))
    case "$HOUR$MINUTE" in
        00) echo "🕛" ;;
        10) echo "🕐" ;;
        20) echo "🕑" ;;
        30) echo "🕒" ;;
        40) echo "🕓" ;;
        50) echo "🕔" ;;
        60) echo "🕕" ;;
        70) echo "🕖" ;;
        80) echo "🕗" ;;
        90) echo "🕘" ;;
        100) echo "🕙" ;;
        110) echo "🕚" ;;
        01) echo "🕧" ;;
        11) echo "🕜" ;;
        21) echo "🕝" ;;
        31) echo "🕞" ;;
        41) echo "🕟" ;;
        51) echo "🕠" ;;
        61) echo "🕡" ;;
        71) echo "🕢" ;;
        81) echo "🕣" ;;
        91) echo "🕤" ;;
        101) echo "🕥" ;;
        111) echo "🕦" ;;
    esac
}

x-time-input() {
    gen-times | d menu dmenu "Time" # TODO: should this be generalized as "arbitrary user input"?
}

x-gen-tz-summary() {
    local TZ_FROM
    local TIME

    TZ_FROM=$(x-select-tz)
    TIME=$(x-time-input)
    gen-tz-summary "$TZ_FROM" "$TIME"
}

x-gen-tz-summary-show() {
    d menu message "$(x-gen-tz-summary)"
}

x-gen-tz-summary-copy() {
    d require xclip
    x-gen-tz-summary | xclip -selection clipboard
}

listXOptions () {
    cat <<EOF
{
    "prompt": "option",
    "commands": [
        {
            "description": "Convert timezone",
            "command": "d tz x-convert-tz"
        },
        {
            "description": "Show time summary",
            "command": "d tz x-gen-tz-summary-show"
        },
        {
            "description": "Save time summary to clipboard",
            "command": "d tz x-gen-tz-summary-copy"
        }
    ]
}
EOF
}

main "$@"
