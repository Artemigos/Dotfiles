#!/bin/bash

set -euo pipefail

# shellcheck source=base.sh
source "$(d script-base)"

join() {
    local IFS="$1"
    shift
    echo "$*"
}

open-in-container() {
    d require firefox
    local URL=${1:?URL required}
    local CONTAINER=${2:-}

    if [ -n "$CONTAINER" ]; then
        firefox "ext+container:name=$CONTAINER&url=$URL"
    else
        firefox "$URL"
    fi
}

container-for-account() {
    local ACCOUNT=${1:?Account required}
    d config get "aws.account-containers.$ACCOUNT"
}

profile-for-account() {
    local ACCOUNT=${1:?Account required}
    d config get "aws.account-profiles.$ACCOUNT"
}

d-aws-x-perform-login() {
    local ACCOUNT CONTAINER
    ACCOUNT=${1:?Account required}
    CONTAINER=$(container-for-account "$ACCOUNT")
    open-in-container "https://$ACCOUNT.signin.aws.amazon.com/console" "$CONTAINER"
    d pass x-autotype "CUP/AWS/$ACCOUNT"
}

d-aws-x-select-account() {
    d require jq
    d config get-arr aws.accounts | d menu dmenu
}

d-aws-x-signin() {
    ACCOUNT=$(d-aws-x-select-account)
    d-aws-x-perform-login "$ACCOUNT"
}

d-aws-x-select-service() {
    d require cut sed
    local DATA_FILE CHOICE
    DATA_FILE=$DOTFILES_HOME/.for-reuse/aws-services.tsv
    CHOICE=$(cut -f1 "$DATA_FILE" | d menu dmenu)
    sed -n "/^$CHOICE\t/p" "$DATA_FILE" | cut -f2
}

d-aws-x-open-service() {
    d require envsubst
    local ACCOUNT SERVICE CONTAINER REGION
    REGION=$(d config get aws.region)
    export REGION
    ACCOUNT=$(d-aws-x-select-account)
    SERVICE=$(d-aws-x-select-service | envsubst '$REGION')
    CONTAINER=$(container-for-account "$ACCOUNT")
    open-in-container "$SERVICE" "$CONTAINER"
}

d-aws-find-instances() {
    d require aws jq column
    local query=${1:?Query required}
    aws ec2 describe-instances | jq '[.Reservations[].Instances[]] | map(select(.State.Name == "running" and any(.Tags[]; .Key == "Name" and (.Value | ascii_downcase | contains($query | ascii_downcase)))))' --arg query "$query" | jq -r '.[] | .InstanceId + "   " + (.Tags | map(select(.Key == "Name")))[0].Value' | column --table
}

d-aws-x-open-instance() {
    d require zenity awk
    REGION=$(d config get aws.region)
    ACCOUNT=$(d-aws-x-select-account)
    QUERY=$(zenity --entry --text="Instance name query" --title="AWS instance search")
    CONTAINER=$(container-for-account "$ACCOUNT")
    PROFILE=$(profile-for-account "$ACCOUNT")
    INSTANCE=$(AWS_PROFILE=$PROFILE d-aws-find-instances "$QUERY" | d menu dmenu | awk '{print $1}')
    open-in-container "https://$REGION.console.aws.amazon.com/ec2/home?region=$REGION#InstanceDetails:instanceId=$INSTANCE" "$CONTAINER"
}

d-aws-list-x-options() {
    cat <<EOF
{
    "prompt": "aws",
    "commands": [
        {
            "description": "Sign in",
            "command": "d aws x-signin"
        },
        {
            "description": "Open service",
            "command": "d aws x-open-service"
        }
    ]
}
EOF
}

d-aws-show() {
    d-aws-list-x-options | d menu from-json
}

forward-cmd d-aws- "$@"
