#!/bin/bash

set -euo pipefail

# shellcheck source=base.sh
source "$(d script-base)"

d-menu-from-json() {
    d require jq

    DATA=$(cat "${1:-/dev/stdin}")

    PROMPT=$(echo "$DATA" | jq -r '.prompt')
    SELECTED=$(echo "$DATA" | jq -r '.commands[].description' | d-menu-dmenu "$PROMPT")
    CMD=$(echo "$DATA" | jq -r ".commands | map(select(.description == \"$SELECTED\")) | .[0].command")
    eval "$CMD"
}

d-menu-dmenu() {
    local SELECTOR
    SELECTOR=$(d require-one wofi rofi)

    local PROMPT_ARGS=()
    if [ -n "${1:-}" ]; then
        PROMPT_ARGS+=("-p" "$1")
    fi

    if [ "$SELECTOR" == "rofi" ]; then
        rofi -dmenu -i "${PROMPT_ARGS[@]}"
    else
        wofi -d -i "${PROMPT_ARGS[@]}" 2>/dev/null
    fi
}

d-menu-command() {
    local SELECTOR
    SELECTOR=$(d require-one wofi rofi)

    if [ "$SELECTOR" == "rofi" ]; then
        rofi -modi run -show run
    else
        wofi --show run 2>/dev/null
    fi
}

d-menu-app() {
    local SELECTOR
    SELECTOR=$(d require-one wofi rofi)

    if [ "$SELECTOR" == "rofi" ]; then
        rofi -modi drun -show drun -show-icons
    else
        wofi --show drun -I 2>/dev/null
    fi
}

d-menu-window() {
    # TODO: wofi doesn't support selecting windows, maybe hack something for myself
    d require rofi
    rofi -modi window -show window
}

d-menu-message() {
    local SELECTOR
    SELECTOR=$(d require-one wofi rofi)
    local MSG=${1:?Message required}

    if [ "$SELECTOR" == "rofi" ]; then
        rofi -e "$MSG"
    else
        # wofi -d -i 2>/dev/null
        d error 'Not implemented' '"d menu message" not implemented for wofi backend'
    fi
}

forward-cmd d-menu- "$@"
