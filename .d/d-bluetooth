#!/bin/bash

set -euo pipefail

main() {
    case ${1:-} in
        # menu options
        x-connect) xConnect ;;
        x-connect-paired) xConnectPaired ;;
        enable-scan) enableScan ;;
        x-pair) xPair ;;
        x-trust) xTrust ;;
        x-set-controller-power) xSetControllerPower ;;
        x-disconnect) xDisconnect ;;
        x-unpair) xUnpair ;;
        x-untrust) xUntrust ;;
        # utilities
        select-device) shift; selectDevice "$@" ;;
        select-paired-device) selectPairedDevice ;;
        # menu handling
        list-x-options) listXOptions ;;
        show) listXOptions | d menu ;;
        *) exit 1 ;;
    esac
}

xConnect () {
    d require bluetoothctl
    device=$(selectDevice) && bluetoothctl connect "$device"
}

xConnectPaired () {
    d require bluetoothctl
    device=$(selectPairedDevice) && bluetoothctl connect "$device"
}

enableScan () {
    d require bluetoothctl
    bluetoothctl scan on
}

xPair () {
    d require bluetoothctl
    device=$(selectDevice) && bluetoothctl pair "$device"
}

xTrust () {
    d require bluetoothctl
    device=$(selectDevice) && bluetoothctl trust "$device"
}

xSetControllerPower () {
    d require bluetoothctl rofi
    option=$(echo -e "on\noff" | rofi -dmenu -p "option") && bluetoothctl power "$option"
}

xDisconnect () {
    d require bluetoothctl
    device=$(selectDevice) && bluetoothctl disconnect "$device"
}

xUnpair () {
    d require bluetoothctl
    device=$(selectDevice) && bluetoothctl cancel-pairing "$device"
}

xUntrust () {
    d require bluetoothctl
    device=$(selectDevice) && bluetoothctl untrust "$device"
}

selectPairedDevice () {
    d require bluetoothctl
    selectDevice "$(bluetoothctl devices Paired)"
}

selectDevice () {
    d require bluetoothctl rofi cut
    devices=${1:-$(bluetoothctl devices)}
    device=$(echo "$devices" | rofi -dmenu -p 'select device') && echo "$device" | cut -d' ' -f2
}

listXOptions () {
    cat <<EOF
{
    "prompt": "option",
    "commands": [
        {
            "description": "Connect to a device",
            "command": "d bluetooth x-connect"
        },
        {
            "description": "Connect to a paired device",
            "command": "d bluetooth x-connect-paired"
        },
        {
            "description": "Enable scanning",
            "command": "d bluetooth enable-scan"
        },
        {
            "description": "Pair device",
            "command": "d bluetooth x-pair"
        },
        {
            "description": "Trust device",
            "command": "d bluetooth x-trust"
        },
        {
            "description": "Set controller power",
            "command": "d bluetooth x-set-controller-power"
        },
        {
            "description": "Disconnect from a device",
            "command": "d bluetooth x-disconnect"
        },
        {
            "description": "Unpair device",
            "command": "d bluetooth x-unpair"
        },
        {
            "description": "Untrust device",
            "command": "d bluetooth x-untrust"
        }
    ]
}
EOF
}

main "$@"
