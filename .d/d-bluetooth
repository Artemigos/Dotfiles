#!/bin/bash

set -euo pipefail

# shellcheck source=base.sh
source "$(d script-base)"
@setup 'd bluetooth '

@reg x-connect 'Connect to a device'
x-connect () {
    d require bluetoothctl
    device=$(select-device) && bluetoothctl connect "$device"
}

@reg x-connect-paired 'Connect to a paired device'
x-connect-paired () {
    d require bluetoothctl
    device=$(select-paired-device) && bluetoothctl connect "$device"
}

@reg enable-scan 'Enable scanning'
enable-scan () {
    d require bluetoothctl
    bluetoothctl scan on
}

@reg x-pair 'Pair device'
x-pair () {
    d require bluetoothctl
    device=$(select-device) && bluetoothctl pair "$device"
}

@reg x-trust 'Trust device'
x-trust () {
    d require bluetoothctl
    device=$(select-device) && bluetoothctl trust "$device"
}

@reg x-set-controller-power 'Set controller power'
x-set-controller-power () {
    d require bluetoothctl
    option=$(echo -e "on\noff" | d menu dmenu "option") && bluetoothctl power "$option"
}

@reg x-disconnect 'Disconnect from a device'
x-disconnect () {
    d require bluetoothctl
    device=$(select-device) && bluetoothctl disconnect "$device"
}

@reg x-unpair 'Unpair device'
x-unpair () {
    d require bluetoothctl
    device=$(select-device) && bluetoothctl cancel-pairing "$device"
}

@reg x-untrust 'Untrust device'
x-untrust () {
    d require bluetoothctl
    device=$(select-device) && bluetoothctl untrust "$device"
}

@reg select-paired-device 'Select a paired device' 1
select-paired-device () {
    d require bluetoothctl
    select-device "$(bluetoothctl devices Paired)"
}

@reg select-device 'Select a device' 1
select-device () {
    d require bluetoothctl cut
    devices=${1:-$(bluetoothctl devices)}
    device=$(echo "$devices" | d menu dmenu 'select device') && echo "$device" | cut -d' ' -f2
}

@reg list-connected-devices 'List connected devices' 1
list-connected-devices () {
    d require bluetoothctl
    bluetoothctl devices Connected
}

@reg is-available 'Check if bluetooth is available' 1
is-avilable () {
    d require bluetoothctl wc
    local CONTROLLERS
    CONTROLLERS=$(bluetoothctl list | wc -l)
    [[ "$CONTROLLERS" -gt 0 ]] || return 1
}

@main "$@"
