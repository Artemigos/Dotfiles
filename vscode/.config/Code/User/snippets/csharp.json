{
	// Place your snippets for csharp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"New file with class": {
		"prefix": "file-class",
		"description": "New file with class",
		"body": [
			"using System;",
			"using System.Collections.Generic;",
			"",
			"namespace ${1:ns}",
			"{",
			"    public class ${2:cls}",
			"    {",
			"        $0",
			"    }",
			"}",
			""
		]
	},
	"New file with interface": {
		"prefix": "file-iface",
		"description": "New file with interface",
		"body": [
			"using System;",
			"using System.Collections.Generic;",
			"",
			"namespace ${1:ns}",
			"{",
			"    public interface ${2:cls}",
			"    {",
			"        $0",
			"    }",
			"}",
			""
		]
	},
    "Notifying property": {
        "prefix": "propn",
        "description": "Property sending notifinations when changed",
        "body": [
            "private ${1:string} ${2:_fieldName};",
            "public $1 ${3:PropName}",
            "{",
            "    get => $2;",
            "    set",
            "    {",
            "        if (value == $2)",
            "            return;",
            "",
            "        $2 = value;",
            "        OnNotifyPropertyChanged();",
            "    }",
            "}$0"
        ]
    }
}